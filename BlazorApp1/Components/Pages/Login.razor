@page "/login"
@using BlazorApp1.ValidationModels;
@inject HttpClient httpClient
@inject ILocalStorageService localstorage;
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@if(error != null){
    <ErrorToast Error=@error />
}

<div class="w-100 d-flex justify-content-center align-content-center">
    <EditForm FormName="login" Model="@user" OnValidSubmit="HandleSubmit" class="w-50 d-flex flex-column justify-content-center gap-3">
        <DataAnnotationsValidator />
        <h3 class="text-center">Log into your account</h3>
        <div>
            <label class="form-label mb-1" for="email">Email:</label>
            <InputText class="form-control" type="email" id="email" @bind-Value="user.Email" />
            <ValidationMessage For="() => user.Email" />
        </div>
        <div>
            <label class="form-label mb-1" for="password">Password:</label>
            <InputText class="form-control" type="password" id="password" @bind-Value="user.Password" />
            <ValidationMessage For="() => user.Password" />
        </div>
        <button class="btn btn-primary mt-3" type="submit">Log In</button>
    </EditForm>
</div>


@code {
    LoginUser user = new LoginUser();
    private ApiService apiService;
    private string? error;

    protected override void OnInitialized()
    {
        apiService = new ApiService(httpClient);

    }

    public async Task HandleSubmit(EditContext context)
    {
        var res = await apiService.PostAsync("https://localhost:7027/Auth/login", context.Model);
        if (res.IsSuccess == true)
        {
            await localstorage.SetItemAsStringAsync("jwtToken", res.Data as string);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            error = res.ErrorMessage;
        }
    }
}
